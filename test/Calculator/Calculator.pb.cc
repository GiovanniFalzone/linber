// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Calculator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Calculator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Calculator {

namespace {

const ::google::protobuf::Descriptor* Calculator_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Calculator_msg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* operation_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Calculator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Calculator_2eproto() {
  protobuf_AddDesc_Calculator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Calculator.proto");
  GOOGLE_CHECK(file != NULL);
  Calculator_msg_descriptor_ = file->message_type(0);
  static const int Calculator_msg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculator_msg, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculator_msg, operand_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculator_msg, operand_b_),
  };
  Calculator_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Calculator_msg_descriptor_,
      Calculator_msg::default_instance_,
      Calculator_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(Calculator_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculator_msg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculator_msg, _is_default_instance_));
  operation_type_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Calculator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Calculator_msg_descriptor_, &Calculator_msg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Calculator_2eproto() {
  delete Calculator_msg::default_instance_;
  delete Calculator_msg_reflection_;
}

void protobuf_AddDesc_Calculator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Calculator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020Calculator.proto\022\nCalculator\"e\n\016Calcul"
    "ator_msg\022-\n\toperation\030\001 \001(\0162\032.Calculator"
    ".operation_type\022\021\n\toperand_a\030\002 \001(\002\022\021\n\top"
    "erand_b\030\003 \001(\002*D\n\016operation_type\022\007\n\003SUM\020\000"
    "\022\016\n\nDIFFERENCE\020\001\022\013\n\007PRODUCT\020\002\022\014\n\010DIVISIO"
    "N\020\003b\006proto3", 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Calculator.proto", &protobuf_RegisterTypes);
  Calculator_msg::default_instance_ = new Calculator_msg();
  Calculator_msg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Calculator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Calculator_2eproto {
  StaticDescriptorInitializer_Calculator_2eproto() {
    protobuf_AddDesc_Calculator_2eproto();
  }
} static_descriptor_initializer_Calculator_2eproto_;
const ::google::protobuf::EnumDescriptor* operation_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return operation_type_descriptor_;
}
bool operation_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Calculator_msg::kOperationFieldNumber;
const int Calculator_msg::kOperandAFieldNumber;
const int Calculator_msg::kOperandBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Calculator_msg::Calculator_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.Calculator_msg)
}

void Calculator_msg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Calculator_msg::Calculator_msg(const Calculator_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.Calculator_msg)
}

void Calculator_msg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  operation_ = 0;
  operand_a_ = 0;
  operand_b_ = 0;
}

Calculator_msg::~Calculator_msg() {
  // @@protoc_insertion_point(destructor:Calculator.Calculator_msg)
  SharedDtor();
}

void Calculator_msg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Calculator_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Calculator_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Calculator_msg_descriptor_;
}

const Calculator_msg& Calculator_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Calculator_2eproto();
  return *default_instance_;
}

Calculator_msg* Calculator_msg::default_instance_ = NULL;

Calculator_msg* Calculator_msg::New(::google::protobuf::Arena* arena) const {
  Calculator_msg* n = new Calculator_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Calculator_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:Calculator.Calculator_msg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Calculator_msg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Calculator_msg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(operation_, operand_b_);

#undef ZR_HELPER_
#undef ZR_

}

bool Calculator_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.Calculator_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Calculator.operation_type operation = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation(static_cast< ::Calculator::operation_type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_operand_a;
        break;
      }

      // optional float operand_a = 2;
      case 2: {
        if (tag == 21) {
         parse_operand_a:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &operand_a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_operand_b;
        break;
      }

      // optional float operand_b = 3;
      case 3: {
        if (tag == 29) {
         parse_operand_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &operand_b_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.Calculator_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.Calculator_msg)
  return false;
#undef DO_
}

void Calculator_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.Calculator_msg)
  // optional .Calculator.operation_type operation = 1;
  if (this->operation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operation(), output);
  }

  // optional float operand_a = 2;
  if (this->operand_a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->operand_a(), output);
  }

  // optional float operand_b = 3;
  if (this->operand_b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->operand_b(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.Calculator_msg)
}

::google::protobuf::uint8* Calculator_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.Calculator_msg)
  // optional .Calculator.operation_type operation = 1;
  if (this->operation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operation(), target);
  }

  // optional float operand_a = 2;
  if (this->operand_a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->operand_a(), target);
  }

  // optional float operand_b = 3;
  if (this->operand_b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->operand_b(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.Calculator_msg)
  return target;
}

int Calculator_msg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Calculator.Calculator_msg)
  int total_size = 0;

  // optional .Calculator.operation_type operation = 1;
  if (this->operation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
  }

  // optional float operand_a = 2;
  if (this->operand_a() != 0) {
    total_size += 1 + 4;
  }

  // optional float operand_b = 3;
  if (this->operand_b() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Calculator_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Calculator.Calculator_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Calculator_msg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Calculator_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Calculator.Calculator_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Calculator.Calculator_msg)
    MergeFrom(*source);
  }
}

void Calculator_msg::MergeFrom(const Calculator_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calculator.Calculator_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.operation() != 0) {
    set_operation(from.operation());
  }
  if (from.operand_a() != 0) {
    set_operand_a(from.operand_a());
  }
  if (from.operand_b() != 0) {
    set_operand_b(from.operand_b());
  }
}

void Calculator_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Calculator.Calculator_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Calculator_msg::CopyFrom(const Calculator_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calculator.Calculator_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Calculator_msg::IsInitialized() const {

  return true;
}

void Calculator_msg::Swap(Calculator_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Calculator_msg::InternalSwap(Calculator_msg* other) {
  std::swap(operation_, other->operation_);
  std::swap(operand_a_, other->operand_a_);
  std::swap(operand_b_, other->operand_b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Calculator_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Calculator_msg_descriptor_;
  metadata.reflection = Calculator_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Calculator_msg

// optional .Calculator.operation_type operation = 1;
void Calculator_msg::clear_operation() {
  operation_ = 0;
}
 ::Calculator::operation_type Calculator_msg::operation() const {
  // @@protoc_insertion_point(field_get:Calculator.Calculator_msg.operation)
  return static_cast< ::Calculator::operation_type >(operation_);
}
 void Calculator_msg::set_operation(::Calculator::operation_type value) {
  
  operation_ = value;
  // @@protoc_insertion_point(field_set:Calculator.Calculator_msg.operation)
}

// optional float operand_a = 2;
void Calculator_msg::clear_operand_a() {
  operand_a_ = 0;
}
 float Calculator_msg::operand_a() const {
  // @@protoc_insertion_point(field_get:Calculator.Calculator_msg.operand_a)
  return operand_a_;
}
 void Calculator_msg::set_operand_a(float value) {
  
  operand_a_ = value;
  // @@protoc_insertion_point(field_set:Calculator.Calculator_msg.operand_a)
}

// optional float operand_b = 3;
void Calculator_msg::clear_operand_b() {
  operand_b_ = 0;
}
 float Calculator_msg::operand_b() const {
  // @@protoc_insertion_point(field_get:Calculator.Calculator_msg.operand_b)
  return operand_b_;
}
 void Calculator_msg::set_operand_b(float value) {
  
  operand_b_ = value;
  // @@protoc_insertion_point(field_set:Calculator.Calculator_msg.operand_b)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Calculator

// @@protoc_insertion_point(global_scope)
