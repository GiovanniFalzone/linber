// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Calculator.proto

#ifndef PROTOBUF_Calculator_2eproto__INCLUDED
#define PROTOBUF_Calculator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Calculator {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Calculator_2eproto();
void protobuf_AssignDesc_Calculator_2eproto();
void protobuf_ShutdownFile_Calculator_2eproto();

class Calculator_msg;

enum operation_type {
  SUM = 0,
  DIFFERENCE = 1,
  PRODUCT = 2,
  DIVISION = 3,
  operation_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  operation_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool operation_type_IsValid(int value);
const operation_type operation_type_MIN = SUM;
const operation_type operation_type_MAX = DIVISION;
const int operation_type_ARRAYSIZE = operation_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* operation_type_descriptor();
inline const ::std::string& operation_type_Name(operation_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    operation_type_descriptor(), value);
}
inline bool operation_type_Parse(
    const ::std::string& name, operation_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<operation_type>(
    operation_type_descriptor(), name, value);
}
// ===================================================================

class Calculator_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Calculator.Calculator_msg) */ {
 public:
  Calculator_msg();
  virtual ~Calculator_msg();

  Calculator_msg(const Calculator_msg& from);

  inline Calculator_msg& operator=(const Calculator_msg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Calculator_msg& default_instance();

  void Swap(Calculator_msg* other);

  // implements Message ----------------------------------------------

  inline Calculator_msg* New() const { return New(NULL); }

  Calculator_msg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Calculator_msg& from);
  void MergeFrom(const Calculator_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Calculator_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Calculator.operation_type operation = 1;
  void clear_operation();
  static const int kOperationFieldNumber = 1;
  ::Calculator::operation_type operation() const;
  void set_operation(::Calculator::operation_type value);

  // optional float operand_a = 2;
  void clear_operand_a();
  static const int kOperandAFieldNumber = 2;
  float operand_a() const;
  void set_operand_a(float value);

  // optional float operand_b = 3;
  void clear_operand_b();
  static const int kOperandBFieldNumber = 3;
  float operand_b() const;
  void set_operand_b(float value);

  // @@protoc_insertion_point(class_scope:Calculator.Calculator_msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int operation_;
  float operand_a_;
  float operand_b_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Calculator_2eproto();
  friend void protobuf_AssignDesc_Calculator_2eproto();
  friend void protobuf_ShutdownFile_Calculator_2eproto();

  void InitAsDefaultInstance();
  static Calculator_msg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Calculator_msg

// optional .Calculator.operation_type operation = 1;
inline void Calculator_msg::clear_operation() {
  operation_ = 0;
}
inline ::Calculator::operation_type Calculator_msg::operation() const {
  // @@protoc_insertion_point(field_get:Calculator.Calculator_msg.operation)
  return static_cast< ::Calculator::operation_type >(operation_);
}
inline void Calculator_msg::set_operation(::Calculator::operation_type value) {
  
  operation_ = value;
  // @@protoc_insertion_point(field_set:Calculator.Calculator_msg.operation)
}

// optional float operand_a = 2;
inline void Calculator_msg::clear_operand_a() {
  operand_a_ = 0;
}
inline float Calculator_msg::operand_a() const {
  // @@protoc_insertion_point(field_get:Calculator.Calculator_msg.operand_a)
  return operand_a_;
}
inline void Calculator_msg::set_operand_a(float value) {
  
  operand_a_ = value;
  // @@protoc_insertion_point(field_set:Calculator.Calculator_msg.operand_a)
}

// optional float operand_b = 3;
inline void Calculator_msg::clear_operand_b() {
  operand_b_ = 0;
}
inline float Calculator_msg::operand_b() const {
  // @@protoc_insertion_point(field_get:Calculator.Calculator_msg.operand_b)
  return operand_b_;
}
inline void Calculator_msg::set_operand_b(float value) {
  
  operand_b_ = value;
  // @@protoc_insertion_point(field_set:Calculator.Calculator_msg.operand_b)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Calculator

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Calculator::operation_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Calculator::operation_type>() {
  return ::Calculator::operation_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Calculator_2eproto__INCLUDED
